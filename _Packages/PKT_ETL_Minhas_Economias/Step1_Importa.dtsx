<?xml version="1.0"?>
<DTS:Executable
  DTS:refId="Package" xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:CreatorName="SPARROW-HANK\Leonardo"
  DTS:CreatorComputerName="SPARROW-HANK"
  DTS:CreationDate="7/18/2013 12:11:14 PM"
  DTS:PackageType="5"
  DTS:VersionBuild="178"
  DTS:VersionGUID="{96DD7DEA-28ED-44C8-98DB-6CE0655D9AB0}"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1046"
  DTS:ObjectName="Step1_Importa"
  DTS:DTSID="{532664B5-6847-49CD-89CF-5A84ABAE8463}"
  DTS:CreationName="SSIS.Package.3">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Minhas Economias]"
      DTS:ObjectName="Minhas Economias"
      DTS:DTSID="{27D36AB3-3CA0-4A7F-9054-FB5686FF6C86}"
      DTS:CreationName="EXCEL">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.Jet.OLEDB.4.0;Data Source="+ @[User::ArquivoPath] +";Extended Properties=\"Excel 8.0;HDR=YES\""</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=E:\Repository\project\my-personal-finance\_Loads\Step1_Pendent\Extrato_20121101_20130731.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="ArquivoDataCriacao"
      DTS:DTSID="{B4C4B039-D1B8-4BCE-AB10-FA8B73A30F46}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="ArquivoExtensao"
      DTS:DTSID="{5DA937A2-D2D2-4BF1-9B54-7D99BA3F27B1}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="ArquivoNome"
      DTS:DTSID="{0DB1BF18-C18C-4913-B588-D87DF1C94476}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:Namespace="User"
      DTS:IncludeInDebugDump="2345"
      DTS:ObjectName="ArquivoPath"
      DTS:DTSID="{BFA59015-0E63-4D3F-A25A-7E3DEBBEFFB2}"
      DTS:CreationName="">
      <DTS:VariableValue
        DTS:DataType="8">E:\Repository\project\my-personal-finance\_Loads\Step1_Pendent\Extrato_20121101_20130731.xls</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Importa Arquivos"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Importa Arquivos"
      DTS:DTSID="{679BA6C1-2F64-439E-92FE-AE728DD560CD}"
      DTS:Description="Contêiner do Loop Foreach"
      DTS:CreationName="STOCK:FOREACHLOOP">
      <DTS:ForEachEnumerator
        DTS:ObjectName="{71111C20-0E9E-4C8D-B266-42FD3FEA8BBF}"
        DTS:DTSID="{71111C20-0E9E-4C8D-B266-42FD3FEA8BBF}"
        DTS:CreationName="DTS.ForEachFileEnumerator.3">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\Repository\project\my-personal-finance\_Loads\Step1_Pendent\" />
            <FEFEProperty
              FileSpec="Extrato*.xls" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Importa Arquivos\Importa Excel"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:LocaleID="-1"
          DTS:ObjectName="Importa Excel"
          DTS:DTSID="{DED0EB9E-974E-408E-9A1D-5C8BA7E38787}"
          DTS:Description="Tarefa Fluxo de Dados"
          DTS:CreationName="SSIS.Pipeline.3">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis"
                  name="Insere Variáveis"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  description="Cria novos valores de coluna aplicando expressões a colunas de entrada da transformação. Crie novas colunas ou substitua as existentes. Por exemplo, concatene os valores das colunas 'first name' e 'last name' para formar uma coluna 'full name'."
                  usesDispositions="true"
                  contactInfo="Coluna Derivada;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation;  Todos os Direitos Reservados; http://www.microsoft.com/sql/support;0">
                  <inputs>
                    <input
                      refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada]"
                      name="Entrada de Coluna Derivada"
                      description="Entrada para a Transformação Coluna Derivada">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada].Columns[DataOcorrencia]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[DataOcorrencia]"
                          usageType="readWrite"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          cachedName="DataOcorrencia"
                          cachedDataType="date">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">#{Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[DataOcorrencia]}</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">DataOcorrencia</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada].Columns[Descricao]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Descricao]"
                          usageType="readWrite"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          cachedName="Descricao"
                          cachedDataType="wstr"
                          cachedLength="255">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">#{Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Descricao]}</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">Descricao</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada].Columns[Valor]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Valor]"
                          usageType="readWrite"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          cachedName="Valor"
                          cachedDataType="r8">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">#{Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Valor]}</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">Valor</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada].Columns[Categoria]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Categoria]"
                          usageType="readWrite"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          cachedName="Categoria"
                          cachedDataType="wstr"
                          cachedLength="255">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">#{Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Categoria]}</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">Categoria</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada].Columns[Conta]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Conta]"
                          usageType="readWrite"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          cachedName="Conta"
                          cachedDataType="wstr"
                          cachedLength="255">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">#{Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Conta]}</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">Conta</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada]"
                      name="Saída de Coluna Derivada"
                      description="Saída Padrão da Transformação Coluna Derivada"
                      exclusionGroup="1"
                      synchronousInputId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoPath]"
                          name="ArquivoPath"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoPath]"
                          length="92"
                          dataType="wstr"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">@[User::ArquivoPath]</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">@[User::ArquivoPath]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoNome]"
                          name="ArquivoNome"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoNome]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              name="Expression"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              containsID="true">@[User::ArquivoNome]</property>
                            <property
                              name="FriendlyExpression"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              containsID="true"
                              expressionType="Notify">@[User::ArquivoNome]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Erro de Coluna Derivada]"
                      name="Saída de Erro de Coluna Derivada"
                      description="Saída de Erro da Transformação Coluna Derivada"
                      exclusionGroup="1"
                      synchronousInputId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada]"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Erro de Coluna Derivada].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Erro de Coluna Derivada].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Erro de Coluna Derivada].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Erro de Coluna Derivada].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Importa Arquivos\Importa Excel\Minhas Economias"
                  name="Minhas Economias"
                  componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                  description="Origem do Excel"
                  usesDispositions="true"
                  version="1"
                  contactInfo="Origem do Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation;  Todos os Direitos Reservados; http://www.microsoft.com/sql/support;1">
                  <properties>
                    <property
                      name="CommandTimeout"
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita.">0</property>
                    <property
                      name="OpenRowset"
                      dataType="System.String"
                      description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas.">Transações$</property>
                    <property
                      name="OpenRowsetVariable"
                      dataType="System.String"
                      description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."></property>
                    <property
                      name="SqlCommand"
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      name="SqlCommandVariable"
                      dataType="System.String"
                      description="A variável que contém o comando SQL a ser executado."></property>
                    <property
                      name="AccessMode"
                      dataType="System.Int32"
                      description="Especifica o modo usado para acessar o banco de dados."
                      typeConverter="AccessMode">0</property>
                    <property
                      name="ParameterMapping"
                      dataType="System.String"
                      description="O mapeamento de parâmetros no comando SQL para variáveis."></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Connections[OleDbConnection]"
                      name="OleDbConnection"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      connectionManagerID="Package.ConnectionManagers[Minhas Economias]"
                      connectionManagerRefId="Package.ConnectionManagers[Minhas Economias]" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel]"
                      name="Saída de Origem do Excel">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[DataOcorrencia]"
                          name="DataOcorrencia"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[DataOcorrencia]"
                          dataType="date"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Data Ocorrência]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Descricao]"
                          name="Descricao"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Descricao]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Descrição]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Valor]"
                          name="Valor"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Valor]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Valor]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Categoria]"
                          name="Categoria"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Categoria]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Categoria]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Conta]"
                          name="Conta"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Conta]"
                          length="255"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          truncationRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Conta]" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Data Ocorrência]"
                          name="Data Ocorrência"
                          dataType="date" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Descrição]"
                          name="Descrição"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Valor]"
                          name="Valor"
                          dataType="r8" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Categoria]"
                          name="Categoria"
                          dataType="wstr"
                          length="255" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].ExternalColumns[Conta]"
                          name="Conta"
                          dataType="wstr"
                          length="255" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel]"
                      name="Saída de Erro de Origem do Excel"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Data Ocorrência]"
                          name="Data Ocorrência"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Data Ocorrência]"
                          dataType="date" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Descrição]"
                          name="Descrição"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Descrição]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Valor]"
                          name="Valor"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Valor]"
                          dataType="r8" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Categoria]"
                          name="Categoria"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Categoria]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Conta]"
                          name="Conta"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[Conta]"
                          length="255"
                          dataType="wstr" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Importa Arquivos\Importa Excel\TB Importa"
                  name="TB Importa"
                  componentClassID="{074B8736-CD73-40A5-822E-888215AF57DA}"
                  description="Destino ODBC"
                  usesDispositions="true"
                  version="1"
                  contactInfo="ODBC Destination;Connector for Open Database Connectivity (ODBC) by Attunity; Attunity Ltd.; All Rights Reserved; http://www.attunity.com;1">
                  <properties>
                    <property
                      name="InsertMethod"
                      dataType="System.Int32"
                      description="Método usado para inserção de dados. Os valores possíveis são 'Lote' ou 'Linha por linha'."
                      typeConverter="InsertMethod"
                      expressionType="Notify">1</property>
                    <property
                      name="BindCharColumnsAs"
                      dataType="System.Int32"
                      description="Determina como o componente associará colunas de tipos string de um ou vários bytes (por exemplo, SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). As opções são: Unicode (SQL_C_WCHAR) e ANSI (SQL_C_CHAR)."
                      typeConverter="BindCharColumnsAs"
                      expressionType="Notify">0</property>
                    <property
                      name="BindNumericAs"
                      dataType="System.Int32"
                      description="O tipo de dados ODBC C para associação de dados numéricos."
                      typeConverter="BindNumericAs"
                      expressionType="Notify">0</property>
                    <property
                      name="TableName"
                      dataType="System.String"
                      description="Tabela de destino"
                      expressionType="Notify">"dbo"."TB_IMPORTA"</property>
                    <property
                      name="BatchSize"
                      dataType="System.Int32"
                      description="Especifica o número de linhas inseridas por lote."
                      expressionType="Notify">1000</property>
                    <property
                      name="TransactionSize"
                      dataType="System.Int32"
                      description="Número de linhas inseridas na mesma transação."
                      expressionType="Notify">0</property>
                    <property
                      name="LobChunkSize"
                      dataType="System.Int32"
                      description="Determina a alocação do tamanho da parte para colunas LOB"
                      expressionType="Notify">32768</property>
                    <property
                      name="StatementTimeout"
                      dataType="System.Int32"
                      description="Número de segundos de espera para que uma instrução SQL seja executada antes de retornar ao aplicativo."
                      expressionType="Notify">0</property>
                    <property
                      name="DefaultCodePage"
                      dataType="System.Int32"
                      description="Página de código a ser usada quando as informações da página de código não estão disponíveis na fonte de dados."
                      expressionType="Notify">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Importa Arquivos\Importa Excel\TB Importa.Connections[ODBCConnection]"
                      name="ODBCConnection"
                      description="A conexão de tempo de execução ODBC"
                      connectionManagerID="{7A1BAD08-A9A2-4B6F-993B-938D128F1E8E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[ODS]" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC]"
                      name="Entrada de Destino ODBC"
                      hasSideEffects="true"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[DataOcorrencia]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[DataOcorrencia]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DATAOCORRENCIA]"
                          cachedName="DataOcorrencia"
                          cachedDataType="date" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[Descricao]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Descricao]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DESCRICAO]"
                          cachedName="Descricao"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[Valor]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Valor]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[VALOR]"
                          cachedName="Valor"
                          cachedDataType="r8" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[Categoria]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Categoria]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CATEGORIA]"
                          cachedName="Categoria"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[Conta]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel].Columns[Conta]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CONTA]"
                          cachedName="Conta"
                          cachedDataType="wstr"
                          cachedLength="255" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[ArquivoPath]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoPath]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVOPATH]"
                          cachedName="ArquivoPath"
                          cachedDataType="wstr"
                          cachedLength="92" />
                        <inputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].Columns[ArquivoNome]"
                          lineageId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada].Columns[ArquivoNome]"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVONOME]"
                          cachedName="ArquivoNome"
                          cachedDataType="wstr"
                          cachedLength="255" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVOPATH]"
                          name="ARQUIVOPATH"
                          dataType="str"
                          length="255"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVONOME]"
                          name="ARQUIVONOME"
                          dataType="str"
                          length="255"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVOEXTENSAO]"
                          name="ARQUIVOEXTENSAO"
                          dataType="str"
                          length="5"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVODATACRIACAO]"
                          name="ARQUIVODATACRIACAO"
                          dataType="str"
                          length="20"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVODATACARGA]"
                          name="ARQUIVODATACARGA"
                          dataType="dbTimeStamp" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DATAOCORRENCIA]"
                          name="DATAOCORRENCIA"
                          dataType="dbTimeStamp" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DESCRICAO]"
                          name="DESCRICAO"
                          dataType="str"
                          length="255"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[VALOR]"
                          name="VALOR"
                          dataType="numeric"
                          precision="7"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CATEGORIA]"
                          name="CATEGORIA"
                          dataType="str"
                          length="255"
                          codePage="1252" />
                        <externalMetadataColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CONTA]"
                          name="CONTA"
                          dataType="str"
                          length="255"
                          codePage="1252" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC]"
                      name="Saída de Erro de Destino ODBC"
                      isErrorOut="true">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVOPATH]"
                          name="ARQUIVOPATH"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVOPATH]"
                          length="255"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVOPATH]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVONOME]"
                          name="ARQUIVONOME"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVONOME]"
                          length="100"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVONOME]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVOEXTENSAO]"
                          name="ARQUIVOEXTENSAO"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVOEXTENSAO]"
                          length="5"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVOEXTENSAO]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVODATACRIACAO]"
                          name="ARQUIVODATACRIACAO"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVODATACRIACAO]"
                          length="20"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVODATACRIACAO]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVODATACARGA]"
                          name="ARQUIVODATACARGA"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ARQUIVODATACARGA]"
                          dataType="dbTimeStamp"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[ARQUIVODATACARGA]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[DATAOCORRENCIA]"
                          name="DATAOCORRENCIA"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[DATAOCORRENCIA]"
                          dataType="dbTimeStamp"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DATAOCORRENCIA]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[DESCRICAO]"
                          name="DESCRICAO"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[DESCRICAO]"
                          length="255"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[DESCRICAO]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[VALOR]"
                          name="VALOR"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[VALOR]"
                          precision="7"
                          scale="2"
                          dataType="numeric"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[VALOR]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[CATEGORIA]"
                          name="CATEGORIA"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[CATEGORIA]"
                          length="255"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CATEGORIA]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[CONTA]"
                          name="CONTA"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[CONTA]"
                          length="255"
                          dataType="str"
                          codePage="1252"
                          externalMetadataColumnId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC].ExternalColumns[CONTA]" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ErrorCode]"
                          name="ErrorCode"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ErrorCode]"
                          dataType="i4"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          lineageId="Package\Importa Arquivos\Importa Excel\TB Importa.Outputs[Saída de Erro de Destino ODBC].Columns[ErrorColumn]"
                          dataType="i4"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Importa Arquivos\Importa Excel.Paths[Saída de Coluna Derivada]"
                  name="Saída de Coluna Derivada"
                  startId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Outputs[Saída de Coluna Derivada]"
                  endId="Package\Importa Arquivos\Importa Excel\TB Importa.Inputs[Entrada de Destino ODBC]" />
                <path
                  refId="Package\Importa Arquivos\Importa Excel.Paths[Saída de Origem do Excel]"
                  name="Saída de Origem do Excel"
                  startId="Package\Importa Arquivos\Importa Excel\Minhas Economias.Outputs[Saída de Origem do Excel]"
                  endId="Package\Importa Arquivos\Importa Excel\Insere Variáveis.Inputs[Entrada de Coluna Derivada]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Importa Arquivos\Metadados"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ThreadHint="0"
          DTS:LocaleID="-1"
          DTS:ObjectName="Metadados"
          DTS:DTSID="{1960A4D7-7228-4AFB-85C4-CD4A7290B83D}"
          DTS:Description="Tarefa Script"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_94748bfc941b492fa6b64e37fa62d918"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArquivoPath"
              ReadWriteVariables="User::ArquivoDataCriacao,User::ArquivoExtensao,User::ArquivoNome">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_94748bfc941b492fa6b64e37fa62d918
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		public void Main()
		{

            string Path, FileNome, FileExtensao,FileDataCriacao;

            Path = Dts.Variables["ArquivoPath"].Value.ToString();
            
            FileNome = System.IO.Path.GetFileNameWithoutExtension(Path);
            FileExtensao = System.IO.Path.GetExtension(Path);
            FileDataCriacao = System.IO.File.GetCreationTime(Path).ToString();

            Dts.Variables["User::ArquivoNome"].Value = FileNome.ToString();
            Dts.Variables["User::ArquivoExtensao"].Value = FileExtensao.ToString();
            Dts.Variables["User::ArquivoDataCriacao"].Value = FileDataCriacao;

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_94748bfc941b492fa6b64e37fa62d918</msb:CodeName>
		<msb:DisplayName>ST_94748bfc941b492fa6b64e37fa62d918</msb:DisplayName>
		<msb:ProjectId>{815A77F9-49E3-46FA-BB08-510739FE07D5}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_94748bfc941b492fa6b64e37fa62d918.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_94748bfc941b492fa6b64e37fa62d918.Properties.Settings.get_Default():ST_94748bfc941b492fa6b64e37fa62d918.Properties.Sett" +
    "ings")]

namespace ST_94748bfc941b492fa6b64e37fa62d918.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_94748bfc941b492fa6b64e37fa62d918.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{549BEF5B-6B10-49FA-80AE-9B43914E2CAC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_94748bfc941b492fa6b64e37fa62d918</RootNamespace>
    <AssemblyName>ST_94748bfc941b492fa6b64e37fa62d918</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_94748bfc941b492fa6b64e37fa62d918")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_94748bfc941b492fa6b64e37fa62d918")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_94748bfc941b492fa6b64e37fa62d918.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_94748bfc941b492fa6b64e37fa62d918.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_94748bfc941b492fa6b64e37fa62d918.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_94748bfc941b492fa6b64e37fa62d918.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_94748bfc941b492fa6b64e37fa62d918.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_94748bfc941b492fa6b64e37fa62d918.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADVN61EAAAAAAAAAAOAAAiELAQsAABAAAAAGAAAAAAAAfi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADAvAABLAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
LwAAAAAAAEgAAAACAAUAOCIAAPgMAAABAAAAAAAAAIAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgCsAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKCwYoHAAACgwGKB0AAAoTBBIE/hYgAAABbxoAAAoNAigWAAAKbxcAAApyiwAAcG8Y
AAAKB28aAAAKbx4AAAoCKBYAAApvFwAACnKvAABwbxgAAAoIbxoAAApvHgAACgIoFgAACm8XAAAK
ctsAAHBvGAAACglvHgAACgIoFgAAChZvHwAACioeAiggAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA6AMAACN+AABUBAAADAYAACNTdHJpbmdz
AAAAAGAKAAAQAQAAI1VTAHALAAAQAAAAI0dVSUQAAACACwAAeAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6JTMAFgAAAQAAACAAAAAFAAAABgAAAAkAAAABAAAAIAAAAAIAAAAPAAAAAgAAAAIA
AAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZ
AboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3AC
BgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBS
BDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgAdBf0EEgA1Bf0EBgBkBVoFBgCSBVoFBgCXBboA
AAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAAD
AQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMY
vAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggG
Aj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIAvCAAAAAAhgAaAhsAAgB0IQAAAACGGLwB
GwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFY
AHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkA
vAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNANkAJwWSAOEAPgWXAOkARwWdAAkAUQWhAPEAaQWl
APEAhQWlAPkAoAWqAOkAsAWxANkAugVdABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwAxAS4A
IwAxAS4AYwBXAS4ACwDAAC4AEwAIAS4AMwAIAS4AKwAxAS4AOwA3AS4AQwAxAS4AWwBOAUMAawBT
AEkAkwCAAGEAmwBTAIMAqwBTAHUAtgACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIA
AwAFAAEABAAFAAIABQAHAASAAAABAAAAVhNKBgAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAA
AAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKAN4E
AAAAAAAAAAABAAAAyQUAAAUABAAAAAA8TW9kdWxlPgBTVF85NDc0OGJmYzk0MWI0OTJmYTZiNjRl
MzdmYTYyZDkxOC5kbGwAUmVzb3VyY2VzAFNUXzk0NzQ4YmZjOTQxYjQ5MmZhNmI2NGUzN2ZhNjJk
OTE4LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF85NDc0OGJmYzk0MWI0OTJmYTZi
NjRlMzdmYTYyZDkxOABTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVt
LkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNU
QVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3Vy
Y2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVl
X18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0
TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRf
SXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLklPAFBhdGgAR2V0RmlsZU5hbWVXaXRob3V0
RXh0ZW5zaW9uAEdldEV4dGVuc2lvbgBGaWxlAERhdGVUaW1lAEdldENyZWF0aW9uVGltZQBzZXRf
VmFsdWUAc2V0X1Rhc2tSZXN1bHQAU1RfOTQ3NDhiZmM5NDFiNDkyZmE2YjY0ZTM3ZmE2MmQ5MTgu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AOQA0ADcANAA4AGIAZgBjADkA
NAAxAGIANAA5ADIAZgBhADYAYgA2ADQAZQAzADcAZgBhADYAMgBkADkAMQA4AC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAXQQByAHEAdQBpAHYAbwBQAGEAdABoAAAj
VQBzAGUAcgA6ADoAQQByAHEAdQBpAHYAbwBOAG8AbQBlAAArVQBzAGUAcgA6ADoAQQByAHEAdQBp
AHYAbwBFAHgAdABlAG4AcwBhAG8AADFVAHMAZQByADoAOgBBAHIAcQB1AGkAdgBvAEQAYQB0AGEA
QwByAGkAYQBjAGEAbwAAAAAAP/ak+6r2WUKqTKfiHv+w0AAIt3pcVhk04IkIiYRdzYCAzJEDBhIV
AwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQA
AAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAA
AwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAyAADgQAAQ4OBgABEYCBDgQgAQEcCQcFDg4ODhGAgUcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNCgBACNTVF85NDc0OGJmYzk0MWI0OTJmYTZiNjRlMzdmYTYyZDkxOAAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBAABYLwAAAAAAAAAAAABuLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYC8AAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAKQDAAAAAAAAAAAAAKQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBKBlYTAAABAEoGVhM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQEAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADgAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOQA0ADcANAA4AGIAZgBjADkANAAxAGIANAA5ADIAZgBhADYAYgA2ADQAZQAzADcAZgBhADYA
MgBkADkAMQA4AAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQAOQA1
ADAALgAxADYAMQAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADQA
NwA0ADgAYgBmAGMAOQA0ADEAYgA0ADkAMgBmAGEANgBiADYANABlADMANwBmAGEANgAyAGQAOQAx
ADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA5ADQANwA0ADgAYgBmAGMAOQA0ADEAYgA0ADkAMgBmAGEANgBiADYA
NABlADMANwBmAGEANgAyAGQAOQAxADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AOQA0ADcANAA4AGIAZgBjADkANAAxAGIANAA5ADIAZgBhADYAYgA2ADQA
ZQAzADcAZgBhADYAMgBkADkAMQA4AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA0ADkANQAwAC4AMQA2ADEAMAAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADQAOQA1ADAALgAxADYAMQAwAAAAAAAAAAAgAAAMAAAAgD8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Importa Arquivos.PrecedenceConstraints[Restrição]"
          DTS:From="Package\Importa Arquivos\Metadados"
          DTS:To="Package\Importa Arquivos\Importa Excel"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Restrição"
          DTS:DTSID="{67DC4EC0-4CEC-4797-9121-7EA6AA52A70A}"
          DTS:CreationName="" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:VariableName="User::ArquivoPath"
          DTS:ValueIndex="0"
          DTS:ObjectName="{04C1D49B-3902-43D9-95C4-05821C62C7D3}"
          DTS:DTSID="{04C1D49B-3902-43D9-95C4-05821C62C7D3}"
          DTS:CreationName="" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta seção CDATA contém as informações de layout do pacote. A seção inclui informações como coordenadas (x,y), largura e altura.-->
<!--Se você editar manualmente esta seção e cometer algum erro, poderá excluí-la. -->
<!--O pacote ainda poderá ser carregado normalmente, mas as informações de layout anteriores serão perdidas e o designer reorganizará automaticamente os elementos na superfície de design.-->
<Objects
  Version="sql11">
  <!--Cada nó abaixo conterá propriedades que não afetam o comportamento em tempo de execução.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="143,42"
          Id="Package\Importa Arquivos\Importa Excel"
          TopLeft="25,107" />
        <NodeLayout
          Size="129,42"
          Id="Package\Importa Arquivos\Metadados"
          TopLeft="23,38" />
        <EdgeLayout
          Id="Package\Importa Arquivos.PrecedenceConstraints[Restrição]"
          TopLeft="87.5,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,27"
              Start="0,0"
              End="9,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.5"
                    Point2="0,13.5"
                    Point3="4,13.5" />
                  <mssgle:LineSegment
                    End="5,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5,13.5"
                    Point2="9,13.5"
                    Point3="9,17.5" />
                  <mssgle:LineSegment
                    End="9,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,208"
          Size="297,251"
          Id="Package\Importa Arquivos"
          TopLeft="150,73" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Importa Arquivos\Importa Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\Importa Arquivos\Importa Excel\Minhas Economias"
          TopLeft="112,138" />
        <NodeLayout
          Size="153,42"
          Id="Package\Importa Arquivos\Importa Excel\Insere Variáveis"
          TopLeft="219,249" />
        <EdgeLayout
          Id="Package\Importa Arquivos\Importa Excel.Paths[Saída de Origem do Excel]"
          TopLeft="194,180">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.3333333333333,69"
              Start="0,0"
              End="77.3333333333333,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.9715394566624" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.9715394566624"
                    Point2="0,40.9715394566624"
                    Point3="4,40.9715394566624" />
                  <mssgle:LineSegment
                    End="73.3333333333333,40.9715394566624" />
                  <mssgle:CubicBezierSegment
                    Point1="73.3333333333333,40.9715394566624"
                    Point2="77.3333333333333,40.9715394566624"
                    Point3="77.3333333333333,44.9715394566624" />
                  <mssgle:LineSegment
                    End="77.3333333333333,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="131,42"
          Id="Package\Importa Arquivos\Importa Excel\TB Importa"
          TopLeft="379,151" />
        <EdgeLayout
          Id="Package\Importa Arquivos\Importa Excel.Paths[Saída de Coluna Derivada]"
          TopLeft="319.666666666667,249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124.833333333333,-56"
              Start="0,0"
              End="124.833333333333,-48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.7477360931436" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.7477360931436"
                    Point2="0,-22.7477360931436"
                    Point3="4,-22.7477360931436" />
                  <mssgle:LineSegment
                    End="120.833333333333,-22.7477360931436" />
                  <mssgle:CubicBezierSegment
                    Point1="120.833333333333,-22.7477360931436"
                    Point2="124.833333333333,-22.7477360931436"
                    Point3="124.833333333333,-26.7477360931436" />
                  <mssgle:LineSegment
                    End="124.833333333333,-48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.4166666666667,-17.7477360931436,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Importa Arquivos\Importa Excel\Minhas Economias">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Importa Arquivos\Importa Excel\TB Importa">
    <Properties>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>